{
  "name": "vhdl",
  "rules": {
    "design_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_sequential_stmt"
      }
    },
    "_sequential_stmt": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "assert_stmt"
        },
        {
          "type": "SYMBOL",
          "name": "report_stmt"
        }
      ]
    },
    "assert_stmt": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_label"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "assert"
        },
        {
          "type": "SYMBOL",
          "name": "_condition"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "report_stmt": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_label"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "report"
        },
        {
          "type": "SYMBOL",
          "name": "_condition"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "_label": {
      "type": "SEQ",
      "members": [
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          },
          "named": true,
          "value": "label"
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": ":"
          }
        }
      ]
    },
    "_name": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "identifier": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "PATTERN",
                "value": "[a-zA-Z][_a-zA-Z0-9]*"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "PATTERN",
                "value": "\\\\.*?\\\\"
              }
            ]
          }
        ]
      }
    },
    "_expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_name"
        },
        {
          "type": "SYMBOL",
          "name": "_literal"
        }
      ]
    },
    "_condition": {
      "type": "FIELD",
      "name": "condition",
      "content": {
        "type": "SYMBOL",
        "name": "_expr"
      }
    },
    "_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_number"
        },
        {
          "type": "SYMBOL",
          "name": "character"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "bit_string"
        },
        {
          "type": "SYMBOL",
          "name": "null"
        }
      ]
    },
    "_number": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_abstract_literal"
        },
        {
          "type": "SYMBOL",
          "name": "physical"
        }
      ]
    },
    "_abstract_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "integer"
        },
        {
          "type": "SYMBOL",
          "name": "real"
        }
      ]
    },
    "integer": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "PATTERN",
                "value": "[0-9_]+"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "PATTERN",
                    "value": "[eE][+-]?[0-9_]+"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "PATTERN",
                "value": "[0-9_]+#.*?#"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "PATTERN",
                    "value": "[eE][+-]?[0-9_]+"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "real": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 1,
        "content": {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "PATTERN",
                  "value": "[0-9_]+\\.[0-9_]+"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "PATTERN",
                      "value": "[eE][+-]?[0-9_]+"
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                }
              ]
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "PATTERN",
                  "value": "[0-9_]+#.*?\\..*?#"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "PATTERN",
                      "value": "[eE][+-]?[0-9_]+"
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "physical": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "abstract",
          "content": {
            "type": "SYMBOL",
            "name": "_abstract_literal"
          }
        },
        {
          "type": "FIELD",
          "name": "unit",
          "content": {
            "type": "SYMBOL",
            "name": "_name"
          }
        }
      ]
    },
    "character": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "'.*?'"
      }
    },
    "string": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\".*?\""
      }
    },
    "bit_string": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[0-9_]*[usUS]?[boxdBOXD]\".*?\""
      }
    },
    "null": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "null"
      }
    },
    "comment": {
      "type": "CHOICE",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "--.*"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "/*"
              },
              {
                "type": "PATTERN",
                "value": "([^\\*]|(\\*[^\\/]))*"
              },
              {
                "type": "STRING",
                "value": "*/"
              }
            ]
          }
        }
      ]
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "comment"
    },
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

